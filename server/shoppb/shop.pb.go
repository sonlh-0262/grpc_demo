// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shop.proto

package shoppb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PrefecturesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrefecturesRequest) Reset()         { *m = PrefecturesRequest{} }
func (m *PrefecturesRequest) String() string { return proto.CompactTextString(m) }
func (*PrefecturesRequest) ProtoMessage()    {}
func (*PrefecturesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{0}
}

func (m *PrefecturesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrefecturesRequest.Unmarshal(m, b)
}
func (m *PrefecturesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrefecturesRequest.Marshal(b, m, deterministic)
}
func (m *PrefecturesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrefecturesRequest.Merge(m, src)
}
func (m *PrefecturesRequest) XXX_Size() int {
	return xxx_messageInfo_PrefecturesRequest.Size(m)
}
func (m *PrefecturesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrefecturesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrefecturesRequest proto.InternalMessageInfo

type PrefecturesResponse struct {
	Name                 []string `protobuf:"bytes,1,rep,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrefecturesResponse) Reset()         { *m = PrefecturesResponse{} }
func (m *PrefecturesResponse) String() string { return proto.CompactTextString(m) }
func (*PrefecturesResponse) ProtoMessage()    {}
func (*PrefecturesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0f3030369b20fd61, []int{1}
}

func (m *PrefecturesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrefecturesResponse.Unmarshal(m, b)
}
func (m *PrefecturesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrefecturesResponse.Marshal(b, m, deterministic)
}
func (m *PrefecturesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrefecturesResponse.Merge(m, src)
}
func (m *PrefecturesResponse) XXX_Size() int {
	return xxx_messageInfo_PrefecturesResponse.Size(m)
}
func (m *PrefecturesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrefecturesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrefecturesResponse proto.InternalMessageInfo

func (m *PrefecturesResponse) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

func init() {
	proto.RegisterType((*PrefecturesRequest)(nil), "shops.PrefecturesRequest")
	proto.RegisterType((*PrefecturesResponse)(nil), "shops.PrefecturesResponse")
}

func init() {
	proto.RegisterFile("shop.proto", fileDescriptor_0f3030369b20fd61)
}

var fileDescriptor_0f3030369b20fd61 = []byte{
	// 139 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xce, 0xc8, 0x2f,
	0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0xb1, 0x8b, 0x95, 0x44, 0xb8, 0x84, 0x02,
	0x8a, 0x52, 0xd3, 0x52, 0x93, 0x4b, 0x4a, 0x8b, 0x52, 0x8b, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b,
	0x4b, 0x94, 0x34, 0xb9, 0x84, 0x51, 0x44, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x84, 0xb8,
	0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x98, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xa3, 0x40,
	0x2e, 0x96, 0xe0, 0x8c, 0xfc, 0x02, 0x21, 0x4f, 0x2e, 0x3e, 0x84, 0x16, 0x9f, 0xcc, 0xe2, 0x12,
	0x21, 0x49, 0x3d, 0xb0, 0x15, 0x7a, 0x98, 0xe6, 0x4b, 0x49, 0x61, 0x93, 0x82, 0x58, 0xa2, 0xc4,
	0xe0, 0xc4, 0x11, 0xc5, 0x06, 0x92, 0x2e, 0x48, 0x4a, 0x62, 0x03, 0xbb, 0xd5, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x3f, 0x5d, 0xa9, 0x5e, 0xb9, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ShopClient is the client API for Shop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShopClient interface {
	PrefectureList(ctx context.Context, in *PrefecturesRequest, opts ...grpc.CallOption) (*PrefecturesResponse, error)
}

type shopClient struct {
	cc grpc.ClientConnInterface
}

func NewShopClient(cc grpc.ClientConnInterface) ShopClient {
	return &shopClient{cc}
}

func (c *shopClient) PrefectureList(ctx context.Context, in *PrefecturesRequest, opts ...grpc.CallOption) (*PrefecturesResponse, error) {
	out := new(PrefecturesResponse)
	err := c.cc.Invoke(ctx, "/shops.Shop/PrefectureList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShopServer is the server API for Shop service.
type ShopServer interface {
	PrefectureList(context.Context, *PrefecturesRequest) (*PrefecturesResponse, error)
}

// UnimplementedShopServer can be embedded to have forward compatible implementations.
type UnimplementedShopServer struct {
}

func (*UnimplementedShopServer) PrefectureList(ctx context.Context, req *PrefecturesRequest) (*PrefecturesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PrefectureList not implemented")
}

func RegisterShopServer(s *grpc.Server, srv ShopServer) {
	s.RegisterService(&_Shop_serviceDesc, srv)
}

func _Shop_PrefectureList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PrefecturesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShopServer).PrefectureList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shops.Shop/PrefectureList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShopServer).PrefectureList(ctx, req.(*PrefecturesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Shop_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shops.Shop",
	HandlerType: (*ShopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PrefectureList",
			Handler:    _Shop_PrefectureList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shop.proto",
}
